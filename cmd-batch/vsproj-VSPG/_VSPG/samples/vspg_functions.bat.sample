@echo off
setlocal EnableDelayedExpansion
set batfilenam=%~n0%~x0
set batdir=%~dp0
set batdir=%batdir:~0,-1%
set _vspgINDENTS=%_vspgINDENTS%.
call :Echos START from %batdir%

echo This bat is not to be called directly.
exit /b 0



REM =============================
REM ====== Functions Below ======
REM =============================

:Echos
  REM This function preserves %ERRORLEVEL% for the caller,
  REM and, LastError does NOT pollute the caller.
  setlocal & set LastError=%ERRORLEVEL%
  echo %_vspgINDENTS%[%batfilenam%] %*
exit /b %LastError%

:EchosV1
  REM echo %* only when vspg_DO_SHOW_VERBOSE=1 .
  setlocal & set LastError=%ERRORLEVEL%
  if not defined vspg_DO_SHOW_VERBOSE goto :_EchosV1_done
  echo %_vspgINDENTS%[%batfilenam%]# %*
:_EchosV1_done
exit /b %LastError%

:EchoAndExec
  echo %_vspgINDENTS%[%batfilenam%] EXEC: %*
  call %*
exit /b %ERRORLEVEL%

:EchoVar
  setlocal & set Varname=%~1
  call echo %_vspgINDENTS%[%batfilenam%]%~2 %Varname% = %%%Varname%%%
exit /b 0

:SetErrorlevel
  REM Usage example:
  REM call :SetErrorlevel 4
exit /b %1

:PackDoubleQuotes
  REM Take whole %* as input, replace each " with "" and return the result string.
  REM The return value is put in global var _vspg_dqpacked .
  set allparams=%*
  set _vspg_dqpacked=%allparams:"=""%
exit /b 0

:UnpackDoubleQuotes
  setlocal & set allparams=%~2
  set unpacked=%allparams:""="%
  endlocal & (
    set %~1=%unpacked%
  )
exit /b 0


:GetAbsPath
  REM Get absolute-path from a relative-path. If already absolute, return as is.
  REM Param1: Var name to receive output.
  REM Param2: The input path.
  if "%~1"=="" exit /b 4
  if "%~2"=="" exit /b 4
  for %%a in ("%~2") do set "%~1=%%~fa"
exit /b 0


:AssertHasValue
  REM Assert that batch variables has non-empty value.
  REM Each param is an variable name.
  if "%~1"=="" exit /b 0
  if not defined %~1 (
    call :Echos [ERROR] '%~1' has empty value.
    exit /b 4
  )
  shift
  goto :AssertHasValue
exit /b 444


:Touch
  REM Touch updates a file's modification time to current.
  REM NOTE: No way to check for success/fail here. So, call it only when 
  REM you have decided to fail the whole bat.

  copy /b "%~1"+,, "%~1" >NUL 2>&1
exit /b %ERRORLEVEL%

:GetParentDir
  REM Example
  REM
  REM   call :GetParentDir outputvar "c:\program files\d1\d2"
  REM 
  REM Return:
  REM 
  REM   outputvar=c:\program files\d2
  setlocal
  if "%~1"=="" exit /b 4
  for %%g in ("%~2") do set parentdir=%%~dpg
  endlocal & ( set "%~1=%parentdir:~0,-1%" )
exit /b 0
