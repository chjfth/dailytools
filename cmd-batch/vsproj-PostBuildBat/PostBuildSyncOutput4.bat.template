@echo off
setlocal enabledelayedexpansion
set batfilenam=%~n0%~x0
REM
set BuildConf=%1
set PlatformName=%2
set ExeDllDir=%3
set TargetName=%4

REM =========================================================================
REM This file should be kept as a .template file, because not all users
REM need to duplicate EXE/DLL output at all times.
REM 
REM After copying this file to PostBuildSyncOutput4.bat (drop the .template suffix),
REM customize DIR_COPY_TO_DIR's value to set where to duplicate the output EXE/DLL.
REM You can list multiple target dirs, separated by spaces.
REM For example, duplicate to two remote machine folders for remote debugging.
REM 
set DIR_COPY_TO_LIST=z:\bin y:\bin2
REM
REM =========================================================================


for %%d in (%DIR_COPY_TO_LIST%) do (
	set d_final=%%d\__%BuildConf%\%PlatformName%
	if not exist !d_final! ( 
		mkdir !d_final! 
	)
	set copy_cmd=copy %ExeDllDir%\*.* !d_final!
	call :EchoExec !copy_cmd!
	!copy_cmd!
	if errorlevel 1 ( 
		call :Echos BAD. Error occurred when copying file to some DIR_COPY_TO_LIST.
		exit /b 4 
	)
)


goto :END

REM =============================
REM ==== Main Procedure Done ====
REM =============================

:Echos
  echo [%batfilenam%] %*
exit /b

:EchoExec
  echo [%batfilenam%] EXEC: %*
exit /b

:EchoVar
  REM Env-var double expansion trick from: https://stackoverflow.com/a/1202562/151453
  set _Varname=%1
  for /F %%i in ('echo %%%_Varname%%%') do echo [%batfilenam%] %_Varname% = %%i
exit /b

:END
rem echo [%batfilenam%] END for %ProjectDir%
