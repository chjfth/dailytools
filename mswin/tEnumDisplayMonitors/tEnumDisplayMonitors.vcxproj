<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <!-- Win32(x86) -->
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug ANSI|Win32">
      <Configuration>Debug ANSI</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release ANSI|Win32">
      <Configuration>Release ANSI</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <!-- x64 -->
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug ANSI|x64">
      <Configuration>Debug ANSI</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release ANSI|x64">
      <Configuration>Release ANSI</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <!-- ARM64 -->
    <ProjectConfiguration Include="Debug|ARM64">
      <Configuration>Debug</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|ARM64">
      <Configuration>Release</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug ANSI|ARM64">
      <Configuration>Debug ANSI</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release ANSI|ARM64">
      <Configuration>Release ANSI</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <!-- ARM64EC -->
    <ProjectConfiguration Include="Debug|ARM64EC">
      <Configuration>Debug</Configuration>
      <Platform>ARM64EC</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|ARM64EC">
      <Configuration>Release</Configuration>
      <Platform>ARM64EC</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug ANSI|ARM64EC">
      <Configuration>Debug ANSI</Configuration>
      <Platform>ARM64EC</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release ANSI|ARM64EC">
      <Configuration>Release ANSI</Configuration>
      <Platform>ARM64EC</Platform>
    </ProjectConfiguration>
  </ItemGroup>

  <!-- User project properties -->

  <PropertyGroup Label="Configuration">
    <ProjectGuid>{20250608-0000-0000-0000-091723000001}</ProjectGuid>
    <ProjectName>tEnumDisplayMonitors</ProjectName>
     <TargetName>$(ProjectName)</TargetName>
    <ConfigurationType>Application</ConfigurationType>
  </PropertyGroup>

  <!-- Microsoft.Cpp.Default.props 
  	This should be after above "Global" Properties. (At least Linux .vcxproj demands this.) -->
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />

  <!-- Debug or Release -->
  <PropertyGroup Condition=" $(Configuration.StartsWith('Debug'))" Label="Configuration">
    <UseDebugLibraries>true</UseDebugLibraries>
  </PropertyGroup>
  <PropertyGroup Condition="!$(Configuration.StartsWith('Debug'))" Label="Configuration">
    <UseDebugLibraries>false</UseDebugLibraries>
    <!-- note: WholeProgramOptimization=true causes `dumpbin /linkermember:1 xxx.lib` to output nothing. -->
    <WholeProgramOptimization>false</WholeProgramOptimization>
  </PropertyGroup>

  <!-- Unicode or ANSI(MBCS) -->
  <PropertyGroup Condition="!$(Configuration.Contains('ANSI'))" Label="Configuration">
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition=" $(Configuration.Contains('ANSI'))" Label="Configuration">
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>

  <PropertyGroup>
    <!-- Referring to $(DefaultPlatformToolset), so that this .vcxproj 
      adapts automatically to lastest SDK on current Visual Studio version. 
     
      $(DefaultPlatformToolset) has such values:
        empty  on VC2010
        "v120" on VC2013
        "v140" on VC2015
        "v141" on VC2017
        "v142" on VC2019
        "v143" on VC2022
      -->
    <PlatformToolset Condition="$(DefaultPlatformToolset)!=''">$(DefaultPlatformToolset)</PlatformToolset>

    <!-- Chj special: For VC2013 and VC2015, I want them to produce WinXP-runnable EXE. (I want v120_xp or v140_xp) -->
    <PlatformToolset Condition="$(DefaultPlatformToolset)=='v120' or $(DefaultPlatformToolset)=='v140'">$(DefaultPlatformToolset)_xp</PlatformToolset>
    
  </PropertyGroup>

  <!---->

  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />

  <!-- Better .obj/.exe/.pdb output folder structure -->

  <PropertyGroup>
    <LinkIncremental>false</LinkIncremental>
     <IntDir>$(ProjectDir)obj-$(PlatformToolset)\$(Platform)\$(Configuration)\</IntDir>
    <OutDir>$(SolutionDir)bin-$(PlatformToolset)\$(Platform)\$(Configuration)\</OutDir>
  </PropertyGroup>

  <!-- 
  	Compiler/Linker Behavior Settings : shared 
  -->

  <ItemDefinitionGroup>

    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <DebugInformationFormat>ProgramDataBase</DebugInformationFormat>

      <!-- Note: $(TargetPath) cannot receive a value in <PropertyGroup>, so it has to be in ItemDefinitionGroup. -->

      <!-- LIB's .pdb is final-pdb at compile stage, we want to see whole original xxx.lib name in PDB filename. -->
      <ProgramDataBaseFileName Condition="'$(TargetExt)'=='.lib' ">$(TargetPath).pdb</ProgramDataBaseFileName>
      <!-- EXE/DLL's .pdb is truly intermediate, so we put it in $(IntDir), with some fancy file-naming -->
      <ProgramDataBaseFileName Condition="'$(TargetExt)'!='.lib' ">$(IntDir)$(TargetName).$(PlatformToolset).pdb</ProgramDataBaseFileName>

      <PreprocessorDefinitions>;;WIN32;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>

      <AdditionalIncludeDirectories>.;..;..\..\__chjcxx\common-include\include;..\..\__WinConst;;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <ProgramDataBaseFile>$(TargetPath).pdb</ProgramDataBaseFile>
      <ImportLibrary>$(OutDir)$(TargetName)--imp.lib</ImportLibrary>
      <GenerateMapFile>true</GenerateMapFile>
      <AdditionalLibraryDirectories>;;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>

      <AdditionalLibraryDirectories Condition="'$(Platform)'=='Win32'">;;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalLibraryDirectories Condition="'$(Platform)'=='x64'"  >;;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>

      <AdditionalDependencies>Psapi.lib;ComCtl32.Lib;;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
 
    <!-- Better build.log file naming -->
    <BuildLog>
      <Path>$(IntDir)__$(MSBuildProjectName).build.log</Path>
    </BuildLog>
 
  </ItemDefinitionGroup>
 
  <!-- 
  	Compiler Behavior Settings : Debug 
  -->

  <ItemDefinitionGroup Condition=" $(Configuration.StartsWith('Debug'))">
    <ClCompile>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>_DEBUG;DBG=1;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
    </ClCompile>
    <Link>
      <RandomizedBaseAddress Condition="!$(Platform.StartsWith('ARM64'))">false</RandomizedBaseAddress>
    </Link>
  </ItemDefinitionGroup>

  <!-- 
  	Compiler Behavior Settings : Release 
  -->

  <ItemDefinitionGroup Condition="$(Configuration.StartsWith('Release'))">
    <ClCompile>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <PreprocessorDefinitions>NDEBUG;DBG=0;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
    </ClCompile>
    <Link>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
  </ItemDefinitionGroup>

  <!-- 
    Source file list:
   -->

  <ItemGroup>
    <ClCompile Include="tEnumDisplayMonitors.cpp" />
    <ClCompile Include="..\utils.cpp" />
<!--
    <ClCompile Include="..\..\__WinConst\itc\InterpretConst.cpp" />
    <ClCompile Include="..\..\__WinConst\mswin\WinError.itc.cpp" />
-->
  </ItemGroup>
  <ItemGroup>
    <ResourceCompile Include="tEnumDisplayMonitors.rc" />
  </ItemGroup>
  <ItemGroup>
    <None Include="tEnumDisplayMonitors.ico" />
    <None Include="_iversion.rc" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="iversion.h" />
    <ClInclude Include="..\utils.h" />
    <ClInclude Include="resource.h" />
    <ClInclude Include="..\..\__chjcxx\common-include\include\mswin\JULayout2.h" />
    <ClInclude Include="..\..\__chjcxx\common-include\include\mswin\WinMultiMon.h" />
<!-- 
    <ClInclude Include="..\..\__chjcxx\common-include\include\EnsureClnup_mswin.h" />
    <ClInclude Include="..\..\__WinConst\mswin\WinError.itc.h" />
-->
  </ItemGroup>
 
  <!-- MSBuild system stock Cpp.targets -->
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
 
  <!-- import VSPG start -->
  <PropertyGroup>
    <VSPG_BootsDir_NoTBS Condition="exists('..\..\__VSPG\_VSPG\boots\_VSPG.props')" >..\..\__VSPG\_VSPG\boots</VSPG_BootsDir_NoTBS>
    <VSPG_BootsDir_NoTBS Condition="exists('$(SolutionDir)_VSPG\boots\_VSPG.props')">$(SolutionDir)_VSPG\boots</VSPG_BootsDir_NoTBS>
  </PropertyGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(VSPG_BootsDir_NoTBS)\_VSPG.props" Condition="exists('$(VSPG_BootsDir_NoTBS)\_VSPG.props')"/>
  </ImportGroup>
  <!-- import VSPG end -->
</Project>
